drop table writes;
drop table holds;
drop table borrowInfo;
drop table handles;
drop table review;
drop table borrows;

drop table books;
drop table authors;
drop table bookReviews;
drop table booksBorrowed;
drop table staff;
drop table bookHolder;

CREATE TABLE books(
    bookID INT PRIMARY KEY,
    genre varchar2(25) NOT NULL,
    publicationYr varchar2(4) NOT NULL,
    condition varchar2(25) NOT NULL,
    available char NOT NULL,
    title varchar2(25) NOT NULL
);
DESC books;

INSERT INTO books(bookID,genre,publicationYr,condition,available,title) VALUES
(1,'action',2000,'well used','Y','book');
INSERT INTO books(bookID,genre,publicationYr,condition,available,title) VALUES
(2,'action',2002,'used','Y','bookey');
INSERT INTO books(bookID,genre,publicationYr,condition,available,title) VALUES
(3,'comedy',1999,'old','N','bookin');
INSERT INTO books(bookID,genre,publicationYr,condition,available,title) VALUES
(4,'romance',2011,'new','N','bookley');
INSERT INTO books(bookID,genre,publicationYr,condition,available,title) VALUES
(5,'action',2019,'used','Y','booksey');
INSERT INTO books(bookID,genre,publicationYr,condition,available,title) VALUES
(6,'comedy',2004,'new','Y','bok');
INSERT INTO books(bookID,genre,publicationYr,condition,available,title) VALUES
(7,'horror',2002,'old','N','boook');

CREATE TABLE authors (
    authorID INT PRIMARY KEY,
    dob varchar2(10) NOT NULL,
    nationality varchar2(25) NOT NULL,
    age INT NOT NULL CHECK(age > 0),
    firstN varchar2(25) NOT NULL,
    lastN varchar2(25) NOT NULL
);
DESC authors;

INSERT INTO authors(authorID, dob, nationality, age, firstN, lastN)
VALUES (1, '22/02/1990', 'Australian', 33, 'Harold', 'Aussie');
INSERT INTO authors(authorID, dob, nationality, age, firstN, lastN)
VALUES (2, '15/07/1985', 'American', 38, 'Emily', 'Smith');
INSERT INTO authors(authorID, dob, nationality, age, firstN, lastN)
VALUES (3, '10/11/1978', 'British', 45, 'William', 'Jones');
INSERT INTO authors(authorID, dob, nationality, age, firstN, lastN)
VALUES (4, '03/04/1995', 'Canadian', 28, 'Sophia', 'Chen');
INSERT INTO authors(authorID, dob, nationality, age, firstN, lastN)
VALUES (5, '12/09/1980', 'Irish', 43, 'Liam', 'Murphy');

CREATE TABLE writes (
    authorID INT REFERENCES authors(authorID),
    bookID INT REFERENCES books(bookID),
    
    PRIMARY KEY(bookID,authorID)
);
DESC writes;

INSERT INTO writes (authorID, bookID)
VALUES (1, 1);
INSERT INTO writes (authorID, bookID)
VALUES (1, 2);
INSERT INTO writes (authorID, bookID)
VALUES (2, 3);
INSERT INTO writes (authorID, bookID)
VALUES (2, 4);
INSERT INTO writes (authorID, bookID)
VALUES (3, 5);


CREATE TABLE bookReviews (
    reviewID INT PRIMARY KEY,
    reviewD varchar2(10) NOT NULL,
    rating INT NOT NULL CHECK(rating BETWEEN 1 AND 10)
);
DESC bookReviews;

INSERT INTO bookReviews(reviewID, reviewD, rating)
VALUES (1, '12/04/2021', 9);
INSERT INTO bookReviews(reviewID, reviewD, rating)
VALUES (2, '05/07/2021', 8);
INSERT INTO bookReviews(reviewID, reviewD, rating)
VALUES (3, '22/09/2021', 7);
INSERT INTO bookReviews(reviewID, reviewD, rating)
VALUES (4, '15/12/2021', 6);
INSERT INTO bookReviews(reviewID, reviewD, rating)
VALUES (5, '03/02/2022', 9);

CREATE TABLE holds (
    reviewID INT REFERENCES bookReviews(reviewID),
    bookID INT REFERENCES books(bookID),
    
    PRIMARY KEY(bookID,reviewID)
);
DESC holds;

INSERT INTO holds(reviewID, bookID)
VALUES (1, 1);
INSERT INTO holds(reviewID, bookID)
VALUES (2, 1);
INSERT INTO holds(reviewID, bookID)
VALUES (3, 1);
INSERT INTO holds(reviewID, bookID)
VALUES (4, 2);
INSERT INTO holds(reviewID, bookID)
VALUES (5, 3);




CREATE TABLE booksBorrowed (
    loanID INT PRIMARY KEY,
    borrowD varchar2(10) NOT NULL,
    returnD varchar2(10),
    lateFee NUMBER NOT NULL CHECK (lateFee >= 0),
    fineStat CHAR NOT NULL
);
DESC booksBorrowed;

INSERT INTO booksBorrowed(loanID, borrowD, returnD, lateFee, fineStat)
VALUES (1, '09/11/2022', '09/01/2023', 90.00, 'Y');
INSERT INTO booksBorrowed(loanID, borrowD, returnD, lateFee, fineStat)
VALUES (2, '07/05/2022', '07/07/2022', 25.50, 'N');
INSERT INTO booksBorrowed(loanID, borrowD, returnD, lateFee, fineStat)
VALUES (3, '12/03/2022', '12/04/2022', 12.75, 'N');
INSERT INTO booksBorrowed(loanID, borrowD, returnD, lateFee, fineStat)
VALUES (4, '04/08/2022', '04/09/2022', 20.00, 'N');
INSERT INTO booksBorrowed(loanID, borrowD, returnD, lateFee, fineStat)
VALUES (5, '11/01/2022', '11/03/2022', 45.00, 'Y');

CREATE TABLE borrowInfo(
    loanID INT REFERENCES booksBorrowed(loanID),
    bookID INT REFERENCES books(bookID),
    
    PRIMARY KEY(bookID,loanID)
);
DESC borrowInfo;



CREATE TABLE staff(
    staffID INT PRIMARY KEY,
    firstN varchar2(25) NOT NULL,
    lastN varchar2(25) NOT NULL,
    email varchar2(25) NOT NULL,
    phone varchar2(12) NOT NULL,
    jobTitle varchar2(25) NOT NULL,
    employmentD varchar2(10) NOT NULL,
    salary NUMBER NOT NULL CHECK(salary > 10000),
    workFreq varchar2(25) NOT NULL
);
DESC staff;

INSERT INTO staff(staffID, firstN, lastN, email, phone, jobTitle, employmentD, salary, workFreq)
VALUES (1, 'Jimmy', 'Benson', 'JB@gmail.com', '416-551-2341', 'Senior Shelf Operator', '29/11/2010', 32000, '30hr/week');
INSERT INTO staff(staffID, firstN, lastN, email, phone, jobTitle, employmentD, salary, workFreq)
VALUES (2, 'Sarah', 'Johnson', 'sj@gmail.com', '415-777-9988', 'Assistant Librarian', '15/06/2015', 42000, '40hr/week');
INSERT INTO staff(staffID, firstN, lastN, email, phone, jobTitle, employmentD, salary, workFreq)
VALUES (3, 'Michael', 'Smith', 'ms@gmail.com', '512-333-7890', 'Library Clerk', '03/09/2019', 30000, '35hr/week');
INSERT INTO staff(staffID, firstN, lastN, email, phone, jobTitle, employmentD, salary, workFreq)
VALUES (4, 'Emily', 'Davis', 'ed@gmail.com', '713-555-1234', 'Cataloging Specialist', '22/02/2020', 38000, '38hr/week');
INSERT INTO staff(staffID, firstN, lastN, email, phone, jobTitle, employmentD, salary, workFreq)
VALUES (5, 'Daniel', 'Brown', 'db@gmail.com', '415-888-5678', 'Library Technician', '17/11/2018', 35000, '37hr/week');

CREATE TABLE handles (
    staffID INT REFERENCES staff(staffID),
    bookID INT REFERENCES books(bookID),
    
    PRIMARY KEY(bookID,staffID)
);
DESC handles;



CREATE TABLE bookHolder (
    holderID INT PRIMARY KEY,
    email varchar2(25) NOT NULL,
    phone varchar2(12) NOT NULL,
    membershipStart varchar2(10) NOT NULL,
    membershipExpire varchar2(10) NOT NULL,
    firstN varchar2(25) NOT NULL,
    address varchar2(25) NOT NULL,
    memberStatus char NOT NULL
);
DESC bookHolder;

INSERT INTO bookHolder(holderID, email, phone, membershipStart, membershipExpire, firstN, address, memberStatus)
VALUES(1, 'hadan.books@hotmail.com', '647-982-3573', '20/04/2015', '20/04/2025','Hadan', '152 Bookboy Ave', 'A');
INSERT INTO bookHolder(holderID, email, phone, membershipStart, membershipExpire, firstN, address, memberStatus)
VALUES (2, 'jane.smith@gmail.com', '416-555-7890', '12/08/2018', '12/08/2023', 'Jane', '789 Library Lane', 'A');
INSERT INTO bookHolder(holderID, email, phone, membershipStart, membershipExpire, firstN, address, memberStatus)
VALUES (3, 'mark.johnson@yahoo.com', '512-987-6543', '05/03/2020', '05/03/2024', 'Mark', '456 Bookshelf St', 'A');
INSERT INTO bookHolder(holderID, email, phone, membershipStart, membershipExpire, firstN, address, memberStatus)
VALUES (4, 'lisa.wilson@gmail.com', '713-333-2222', '30/11/2019', '30/11/2022', 'Lisa', '123 Reading Rd', 'I');
INSERT INTO bookHolder(holderID, email, phone, membershipStart, membershipExpire, firstN, address, memberStatus)
VALUES (5, 'sam.jones@hotmail.com', '415-777-1111', '18/06/2021', '18/06/2026', 'Sam', '567 Bookworm Blvd', 'A');

CREATE TABLE review (
    reviewID INT REFERENCES bookReviews(reviewID),
    holderID INT REFERENCES bookHolder(holderID),
    
    PRIMARY KEY(holderID,reviewID)
);
DESC review;

INSERT INTO review (reviewID, holderID)
VALUES (1, 1);
INSERT INTO review (reviewID, holderID)
VALUES (2, 2);
INSERT INTO review (reviewID, holderID)
VALUES (3, 3);
INSERT INTO review (reviewID, holderID)
VALUES (4, 3);
INSERT INTO review (reviewID, holderID)
VALUES (5, 4);


CREATE TABLE borrows (
    holderID INT REFERENCES bookHolder(holderID),
    loanID INT REFERENCES booksBorrowed(loanID),
    
    PRIMARY KEY(holderID,loanID)
);
DESC borrows;

INSERT INTO borrows (holderID, loanID)
VALUES (1, 1);
INSERT INTO borrows (holderID, loanID)
VALUES (2, 2);
INSERT INTO borrows (holderID, loanID)
VALUES (3, 3);
INSERT INTO borrows (holderID, loanID)
VALUES (3, 4);
INSERT INTO borrows (holderID, loanID)
VALUES (4, 5);




INSERT INTO borrowInfo(loanID, bookID)
VALUES (1, 1);
INSERT INTO borrowInfo(loanID, bookID)
VALUES (2, 1);
INSERT INTO borrowInfo(loanID, bookID)
VALUES (3, 1);
INSERT INTO borrowInfo(loanID, bookID)
VALUES (4, 2);
INSERT INTO borrowInfo(loanID, bookID)
VALUES (5, 3);

SELECT * FROM books;
SELECT * FROM authors;
SELECT * FROM bookReviews;
SELECT * FROM booksBorrowed;
SELECT * FROM staff;
SELECT * FROM bookHolder;

SELECT * FROM writes;
SELECT * FROM holds;
SELECT * FROM review;
SELECT * FROM borrows;
SELECT * FROM borrowInfo;

--Query 1
SELECT DISTINCT genre
FROM books
ORDER BY genre;

--Query 2
SELECT DISTINCT title
FROM books
WHERE publicationYr >= '2000'
ORDER BY title;

--Query 3
SELECT condition, COUNT(*) as num_books
FROM books
GROUP BY condition;

--Query 4
SELECT firstN, lastN
FROM authors
ORDER BY lastN ASC;

--Query 5
SELECT *
FROM bookreviews
WHERE rating >= 8
ORDER BY rating DESC;

--Query 6
SELECT *
FROM booksBorrowed
WHERE lateFee >= 50
ORDER BY lateFee DESC;

--QUERY 7
SELECT *
FROM staff
WHERE salary > 35000
ORDER BY salary DESC;

--Advanced Query 1
--Gets the name of the person that wrote the review, the name of the book and the rating they gave
SELECT bookHolder.firstN, books.title, bookReviews.rating, bookReviews.reviewD   
FROM bookHolder
INNER JOIN review
    ON bookHolder.holderID = review.holderID
INNER JOIN bookReviews 
    ON bookReviews.reviewID = review.reviewID
INNER JOIN holds
    ON bookReviews.reviewID = holds.reviewID
INNER JOIN books
    ON holds.bookID = books.bookID;
    

--Advanced Query 2
-- gets the author name,the book they wrote and the genre
SELECT authors.firstN, authors.lastN, books.title, books.genre
FROM authors
INNER JOIN writes
    ON authors.authorID = writes.authorID
INNER JOIN books
    ON writes.bookID = books.bookID;

